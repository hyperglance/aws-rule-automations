{
  "automations":[
    {
      "name": "acl_delete",
      "displayName": "Delete ACL",
      "description": "Deletes an Access Control List",
      "resourceTypes": [
        "Network ACL"
      ],
      "params": [
  
      ]
    },
    {
      "name": "ami_set_private",
      "displayName": "Set AMI to Private",
      "description": "Sets and AMI to Private if it is currently Public",
      "resourceTypes": [
        "EC2 Instance"
      ],
      "params": [
  
      ]
    },
    {
      "name": "cloudtrail_enable_log_validation",
      "displayName": "Enable Cloudtrail Validation",
      "description": "Enables Cloudtrail Log Validation",
      "resourceTypes": [
        "Cloudtrail"
      ],
      "params": [
  
      ]
    },
    {
      "name": "cloudtrail_encrypt_log_files_new_key",
      "displayName": "Encrypt Cloudtrail Logs",
      "description": "Encrypts Cloudtrail Logs, using a new generated KMS Key",
      "resourceTypes": [
        "Cloudtrail"
      ],
      "params": [
  
      ]
    },
    {
      "name": "cloudtrail_encrypt_log_files_existing_key",
      "displayName": "Encrypt Cloudtrail Logs - Existing Key",
      "description": "Encrypts Cloudtrail Logs, using an existing KMS Key",
      "resourceTypes": [
        "Cloudtrail"
      ],
      "params": [
        {
          "name": "Key ID",
          "type": "string",
          "default": " "
        }
      ]
    },
    {
      "name": "dynamodb_delete_table",
      "displayName": "Delete Dynamo DB Table",
      "description": "Deletes a specified Dynamo DB Table",
      "resourceTypes": [
        "DynamoDB Table"
      ],
      "params": [
  
      ]
    },
    {
      "name": "ebs_delete_volume",
      "displayName": "Delete EBS Volume",
      "description": "Deletes a specified EBS Volume",
      "resourceTypes": [
        "EBS Volume"
      ],
      "params": [
  
      ]
    },
    {
      "name": "ec2_attach_role",
      "displayName": "Attach IAM Role",
      "description": "Attaches and IAM role to an Instance",
      "resourceTypes": [
        "EC2",
        "EC2 Instance"
      ],
      "params": [
        {
          "name": "Role",
          "type": "string",
          "default": " "
        }
      ]
    },
    {
      "name": "ec2_delete_internet_gateway",
      "displayName": "Delete Internet Gateway",
      "description": "Deletes a specified Internet Gateway",
      "resourceTypes": [
        "Internet Gateway"
      ],
      "params": [
        {
          "name": "DryRun",
          "type": "boolean",
          "default": "true"
        }
      ]
    },
    {
      "name": "ec2_delete_key_pair",
      "displayName": "Delete EC2 Key Pair",
      "description": "Deletes a specified EC2 Key Pair",
      "resourceTypes": [
        "EC2 Instance"
      ],
      "params": [
  
      ]
    },
    {
      "name": "ec2_delete_nat_gateway",
      "displayName": "Delete NAT Gateway",
      "description": "Deletes a specified NAT Gateway",
      "resourceTypes": [
        "NAT Gateway"
      ],
      "params": [
        {
          "name": "DryRun",
          "type": "boolean",
          "default": "true"
        }
      ]
    },
    {
      "name": "ec2_delete_security_group",
      "displayName": "Delete Security Group",
      "description": "Deletes a specified Security Group",
      "resourceTypes": [
        "Security Group"
      ],
      "params": [
        {
          "name": "DryRun",
          "type": "boolean",
          "default": "true"
        }
      ]
    },
    {
      "name": "ec2_delete_snapshot",
      "displayName": "Delete EBS Snapshot",
      "description": "Deletes a specified EBS Snapshot",
      "resourceTypes": [
        "EBS Snapshot"
      ],
      "params": [
        {
          "name": "DryRun",
          "type": "boolean",
          "default": "true"
        }
      ]
    },
    {
      "name": "ec2_detach_role",
      "displayName": "Detach IAM Role",
      "description": "Detaches a specified role from an EC2 Instance",
      "resourceTypes": [
        "EC2 Instance",
        "IAM"
      ],
      "params": [
  
      ]
    },
    {
      "name": "ec2_quarantine_instance",
      "displayName": "Quarantine EC2 Instance",
      "description": "Quarantines and EC2 Instance by attaching it to a Security group with no Ingress or Egress rules",
      "resourceTypes": [
        "EC2 Instance"
      ],
      "params": [
  
      ]
    },
    {
      "name": "ec2_release_eips",
      "displayName": "Release Elastic IP",
      "description": "Releases and Elastic IP from associated EC2 Instance",
      "resourceTypes": [
        "EC2 Instance",
        "Elatic IP Address"
      ],
      "params": [
  
      ]
    },
    {
      "name": "ec2_snapshot_instance",
      "displayName": "Snapshot Instance",
      "description": "Snapshots attached EBS Volumes",
      "resourceTypes": [
        "EBS Volume",
        "EC2 Instance"
      ],
      "params": [
        {
          "name": "DryRun",
          "type": "boolean",
          "default": "true"
        }
      ]
    },
    {
      "name": "ec2_stop_instance",
      "displayName": "Stop Instance",
      "description": "Immediately Stops and EC2 Instance",
      "resourceTypes": [
        "EC2 Instance"
      ],
      "params": [
        {
          "name": "DryRun",
          "type": "boolean",
          "default": "true"
        }
      ]
    },
    {
      "name": "ec2_terminate_instance",
      "displayName": "Terminate Instance",
      "description": "Terminates EC2 Instance",
      "resourceTypes": [
        "EC2 Instance"
      ],
      "params": [
        {
          "name": "SnapShotBeforeTerminate",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "default": "true"
        }
      ]
    },
    {
      "name": "ecs_delete_image",
      "displayName": "Delete Container Image",
      "description": "Deletes and ECS Container Image",
      "resourceTypes": [
        "ECS Service"
      ],
      "params": [
  
      ]
    },
    {
      "name": "ecs_rebot",
      "displayName": "Restart Privileged ECS Tasks",
      "description": "Restarts ECS Tasks that have Privileged Access Permissions",
      "resourceTypes": [
        "Cloudtrail"
      ],
      "params": [
        {
          "name": "Role",
          "type": "string",
          "default": " "
        }
      ]
    },
    {
      "name": "elb_delete_load_balancer",
      "displayName": "Deletes v2 Load Balancer",
      "description": "Destroys and Elastic Load Balancer (v2)",
      "resourceTypes": [
        "Elastic Load Balancer"
      ],
      "params": [
  
      ]
    },
    {
      "name": "iam_deactivate_unused_access_keys",
      "displayName": "Deactivate Keys",
      "description": "Deactivates Unused Access Keys",
      "resourceTypes": [
        "IAM User",
        "IAM"
      ],
      "params": [
        {
          "name": "MaxKeyItems",
          "type": "number",
          "default": "10",
          "min": "5",
          "max": "200"
        }
      ]
    },
    {
      "name": "iam_delete_access_key",
      "displayName": "Delete Access Keys",
      "description": "Deletes IAM Access Keys",
      "resourceTypes": [
        "IAM User",
        "IAM"
      ],
      "params": [
  
      ]
    },
    {
      "name": "iam_delete_default_policy_version",
      "displayName": "Deletes Default Policy Version",
      "description": "Deletes the default policy version, and sets latest version as active",
      "resourceTypes": [
        "IAM"
      ],
      "params": [
  
      ]
    },
    {
      "name": "iam_disable_user_console_password",
      "displayName": "Disable Console Access",
      "description": "Disables a users console access, but leaves programmatic access intact",
      "resourceTypes": [
        "IAM",
        "IAM User"
      ],
      "params": [
  
      ]
    },
    {
      "name": "iam_force_user_password_change",
      "displayName": "Force Password Change",
      "description": "Forces user to change their password on next login",
      "resourceTypes": [
        "IAM",
        "IAM User"
      ],
      "params": [
  
      ]
    },
    {
      "name": "iam_quarantine_user",
      "displayName": "Quarantine User",
      "description": "Attaches a DENY ALL policy to the user",
      "resourceTypes": [
        "IAM User"
      ],
      "params": [
  
      ]
    },
    {
      "name": "iam_quarantine_role",
      "displayName": "Quarantine IAM Role",
      "description": "Attaches a DENY ALL policy to the role",
      "resourceTypes": [
        "IAM"
      ],
      "params": [
  
      ]
    },
    {
      "name": "iam_revoke_access_key",
      "displayName": "Revoke Access Key",
      "description": "Revokes IAM User Access Keys",
      "resourceTypes": [
        "IAM User",
        "IAM"
      ],
      "params": [
  
      ]
    },
    {
      "name": "iam_role_attach_policy",
      "displayName": "Attach Policy to Role",
      "description": "Attaches an existing policy to an IAM role",
      "resourceTypes": [
        "IAM"
      ],
      "params": [
        {
          "name": "Policy",
          "type": "string",
          "default": ""
        }
      ]
    },
    {
      "name": "iam_user_attach_policy",
      "displayName": "Attach Policy to User",
      "description": "Attaches an existing policy to an IAM User",
      "resourceTypes": [
        "IAM"
      ],
      "params": [
        {
          "name": "Policy",
          "type": "string",
          "default": ""
        }
      ]
    },
    {
      "name": "iam_user_detach_group",
      "displayName": "Detach User from Group",
      "description": "Detaches a user from a specifid User Group",
      "resourceTypes": [
        "IAM"
      ],
      "params": [
        {
          "name": "Group",
          "type": "string",
          "default": ""
        }
      ]
    },
    {
      "name": "kms_enable_rotation",
      "displayName": "Enable KMS Rotation",
      "description": "Enables rotations of KMS Keys",
      "resourceTypes": [
        "IAM"
      ],
      "params": [
  
      ]
    },
    {
      "name": "lambda_detach_blanket_permissions",
      "displayName": "Detach Lambda Permissions",
      "description": "Detaches Permissions from a Lambda execution role, that allows ALL (*) resources",
      "resourceTypes": [
        "IAM"
      ],
      "params": [
  
      ]
    },
    {
      "name": "lambda_detach_external_layers",
      "displayName": "Detach Lambda Layers",
      "description": "Detaches Lambda Layers from Function",
      "resourceTypes": [
        "Lambda"
      ],
      "params": [
  
      ]
    },
    {
      "name": "lambda_disable",
      "displayName": "Disable Lambda",
      "description": "Disables a Lambda from Executing",
      "resourceTypes": [
        "Lambda",
        "Lambda Function"
      ],
      "params": [
  
      ]
    },
    {
      "name": "rds_aurora_delete_cluster",
      "displayName": "Delete Aurora Cluster",
      "description": "Deletes an Aurora DB Cluster",
      "resourceTypes": [
        "RDS"
      ],
      "params": [
        {
          "name": "SkipAuroraSnapshot",
          "type": "boolean",
          "default": "false"
        }
      ]
    },
    {
      "name": "rds_quarantine_instance",
      "displayName": "Quarantine RDS Instance",
      "description": "Quarantines and RDS Instance by applying a DENY ALL Security Group",
      "resourceTypes": [
        "EC2 Instance"
      ],
      "params": [
  
      ]
    },
    {
      "name": "redshift_delete_cluster",
      "displayName": "Delete Redshift Cluster",
      "description": "Deletes a Redshift Cluster",
      "resourceTypes": [
        "Redshift CLuster"
      ],
      "params": [
        {
          "name": "SkipRedshiftSnapshot",
          "type": "boolean",
          "default": "false"
        }
      ]
    },
    {
      "name": "s3_allow_ssl_only",
      "displayName": "S3 Enforce SSL",
      "description": "Enforces SSL for object accedss",
      "resourceTypes": [
        "S3",
        "S3 Bucket"
      ],
      "params": [

      ]
    },
    {
      "name": "s3_block_public_access",
      "displayName": "Block S3 Public Access",
      "description": "Blocks all public access to S3 Bucket",
      "resourceTypes": [
        "S3",
        "S3 Bucket"
      ],
      "params": [
  
      ]
    },
    {
      "name": "s3_delete_acls",
      "displayName": "Delete S3 ACLs",
      "description": "Deletes S3 Bucket Access Control Lists",
      "resourceTypes": [
        "S3",
        "S3 Bucket"
      ],
      "params": [
  
      ]
    },
    {
      "name": "s3_delete_permissions",
      "displayName": "Delete S3 Permissions",
      "description": "Deletes all ACLs and Bucket Policies from an S3 bucket",
      "resourceTypes": [
        "S3",
        "S3 Bucket"
      ],
      "params": [
  
      ]
    },
    {
      "name": "s3_enable_encryption",
      "displayName": "Enable S3 Encryption",
      "description": "Enables AES265 Encryption on S3 Bucket Objects",
      "resourceTypes": [
        "S3",
        "S3 Bucket"
      ],
      "params": [
  
      ]
    },
    {
      "name": "s3_enable_versioning",
      "displayName": "Enable S3 Versioning",
      "description": "Enables Object Versioning",
      "resourceTypes": [
        "S3",
        "S3 Bucket"
      ],
      "params": [
  
      ]
    },
    {
      "name": "sg_delete_rules",
      "displayName": "Delete Rules",
      "description": "Removes all Egress and Ingress rules from a Security Group",
      "resourceTypes": [
        "Security Group"
      ],
      "params": [
  
      ]
    },
    {
      "name": "update_tag",
      "displayName": "Update / Fix Tag",
      "description": "Updates and EC2 Resource Tag Key",
      "resourceTypes": [
        "Security Group",
        "EC2 Instance",
        "EC2 Image",
        "Internet Gateway",
        "Network Acl",
        "Network Interface",
        "Placement Group",
        "Route Table",
        "EC2 Snapshot",
        "Subnet",
        "EBS Volume",
        "VPC"
      ],
      "params": [
        {
          "name": "New Key",
          "type": "string",
          "default": ""
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "default": "true"
        }
      ]
    },
    {
      "name": "vpc_isolate",
      "displayName": "Isolate VPC",
      "description": "Isolates an Entire VPC by applying Deny ALL security group rules",
      "resourceTypes": [
        "VPC"
      ],
      "params": [
  
      ]
    },
    {
      "name": "workspaces_stop_workspace",
      "displayName": "Stop Workspace",
      "description": "Stops a Workspace",
      "resourceTypes": [
        "Workspace"
      ],
      "params": [
  
      ]
    },
    {
      "name": "workspaces_terminate_workspace",
      "displayName": "Terminate Workspace",
      "description": "Terminates a Running Workspacee",
      "resourceTypes": [
        "Workspace"
      ],
      "params": [
  
      ]
    }
    ]
  }